#Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать
# у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
#Примечание: длина списка не фиксирована.
# Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта,
# введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.
#Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента
# и вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст
# (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.

class SortError:
    def __init__(self, *args):
        self.list_ = []

    def input_(self):
        self.list_ = [int(i) for i in input("input:").split()]
    while True:
        try:
            user_value = int(input('Введите: '))
            self.list_.append(user_value)
            print(f'current list: {self.list_} \n')
        except:
            print(f'строка или булево')
            y_or_n = input(f'try again? Y/N')
            if y_or_n == "Y" or y_or_n == "y":
                print(try_except.input_())
            elif y_or_n == "N" or y_or_n == "n":
                break
            else:
                break
try_exept = SortError(2)
print(try_except.input_())


